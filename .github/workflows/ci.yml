name: Continuous Integration

on:
  pull_request:
    branches: [ '*' ]
  push:
    branches: [ '*' ]

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    uses: ./.github/workflows/lint-check.yml
    
  test:
    name: Run Tests
    needs: lint-and-type-check
    uses: ./.github/workflows/test.yml
    with:
      node-version: '20'
      
  build-check:
    name: Build Check
    needs: [lint-and-type-check, test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Build project
      run: yarn build
      
    - name: Comment build status on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Build Status')
          );
          
          const message = 'âœ… **Build Status**\n\nProject builds successfully! Ready for deployment. ðŸš€';
          
          if (botComment) {
            await github.rest.issues.updateComment({
              comment_id: botComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message,
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message,
            });
          }
